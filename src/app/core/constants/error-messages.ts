export type RequestMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';

export interface ErrorStatusMap {
    [statusCode: number]: string;
}

export interface ErrorMessages {
    [endpoint: string]: {
        [method in RequestMethod]?: ErrorStatusMap;
    };
}

export const ERROR_MESSAGES: ErrorMessages = {
    '/Advert/search': {
        POST: {
            500: 'Ошибка сервера при поиске объявлений',
        },
    },
    '/Advert/': {
        GET: {
            404: 'Объявление с таким ID не найдено',
            500: 'Ошибка сервера при получении объявления',
        },
        PUT: {
            400: 'Некорректные данные для обновления объявления',
            403: 'Нет прав на изменение объявления',
            404: 'Объявление с таким ID не найдено',
            422: 'Конфликт бизнес-логики при обновлении объявления',
            500: 'Ошибка сервера при обновлении объявления',
        },
        DELETE: {
            403: 'Нет прав на удаление объявления',
            404: 'Объявление с таким ID не найдено',
            500: 'Ошибка сервера при удалении объявления',
        },
    },
    '/Advert': {
        POST: {
            400: 'Некорректные данные для создания объявления',
            422: 'Конфликт бизнес-логики при создании объявления',
            500: 'Ошибка сервера при создании объявления',
        },
    },
    '/Comments': {
        GET: {
            500: 'Ошибка сервера при получении списка комментариев',
        },
    },
    '/comments': {
        POST: {
            400: 'Некорректные данные для создания комментария',
            422: 'Конфликт бизнес-логики при создании комментария',
            500: 'Ошибка сервера при создании комментария',
        },
    },
    '/Auth/Login': {
        POST: {
            400: 'Некорректные данные для аутентификации пользователя',
            500: 'Ошибка сервера при аутентификации пользователя',
        },
    },
    '/Auth/Register': {
        POST: {
            400: 'Некорректные данные для регистрации пользователя',
            500: 'Ошибка сервера при регистрации пользователя',
        },
    },
    '/Categories/import': {
        POST: {
            422: 'Конфликт бизнес-логики при импорте категорий из JSON списка',
            500: 'Ошибка сервера при импорте категорий из JSON списка',
        },
    },
    '/Categories/': {
        GET: {
            404: 'Категория с таким ID не найдена',
            500: 'Ошибка сервера при получении категории',
        },
        PUT: {
            400: 'Некорректные данные для обновления категории',
            403: 'Нет прав на обновление категории',
            404: 'Категория с таким ID не найдена',
            422: 'Конфликт бизнес-логики при обновлении категории',
            500: 'Ошибка сервера при обновлении категории',
        },
        DELETE: {
            403: 'Нет прав на удаление категории',
            404: 'Категория с таким ID не найдена',
            500: 'Ошибка сервера при удалении категории',
        },
    },
    '/Categories': {
        GET: {
            500: 'Ошибка сервера при получении всех категорий',
        },
        POST: {
            400: 'Некорректные данные для создания категории',
            403: 'Недостаточно прав для создания категории',
            422: 'Конфликт бизнес-логики при создании категории',
            500: 'Ошибка сервера при создании категории',
        },
    },
    // ОСТАЛОСЬ ДОБАВИТЬ Comment Images Users
};
